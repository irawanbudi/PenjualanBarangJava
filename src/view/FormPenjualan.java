/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.PenjualanController;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import model.Penjualan;

/**
 *
 * @author Irawan
 */
public class FormPenjualan extends javax.swing.JInternalFrame {

    private final DefaultTableModel penjualanDefaultTableModel;
    private final PenjualanController penjualanController = new PenjualanController();
    private final Penjualan penjualan = new Penjualan();
    private int idCustomer, qty;
    long jumlah, harga;
    private String Username;
    private java.util.Date tgl=new Date();
    private java.text.SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");

    public String getUsername() {
        return Username;
    }

    public void setUsername(String Username) {
        this.Username = Username;
    }

    public int getQty() {
        return qty;
    }

    public void setQty(int qty) {
        this.qty = qty;
    }

    public long getJumlah() {
        return jumlah;
    }

    public void setJumlah(long jumlah) {
        this.jumlah = jumlah;
    }

    public long getHarga() {
        return harga;
    }

    public void setHarga(long harga) {
        this.harga = harga;
    }

    public int getIdCustomer() {
        return idCustomer;
    }

    public void setIdCustomer(int idCustomer) {
        this.idCustomer = idCustomer;
    }

    public JTextField getKodePenjualanTextField() {
        return kodePenjualanTextField;
    }

    public void setKodePenjualanTextField(JTextField kodePenjualanTextField) {
        this.kodePenjualanTextField = kodePenjualanTextField;
    }

    /**
     * Creates new form FormPenjualan
     */
    public FormPenjualan() {
        initComponents();

        penjualanDefaultTableModel = (DefaultTableModel) penjualanTable.getModel();
        setMnemonic();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        penjualanPopupMenu = new javax.swing.JPopupMenu();
        tambahMenuItem = new javax.swing.JMenuItem();
        hapusMenuItem = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        tutupButton = new javax.swing.JButton();
        simpanButton = new javax.swing.JButton();
        kodePenjualanTextField = new javax.swing.JTextField();
        penjualanPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        penjualanTable = new javax.swing.JTable();
        kodePenjualanLabel = new javax.swing.JLabel();
        semesterLabel = new javax.swing.JLabel();
        totalTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        customerLabel = new javax.swing.JLabel();
        namaCustomerTextField = new javax.swing.JTextField();
        lihatButton = new javax.swing.JButton();
        tanggalTextField = new javax.swing.JTextField();

        tambahMenuItem.setText("jMenuItem1");
        tambahMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahMenuItemActionPerformed(evt);
            }
        });
        penjualanPopupMenu.add(tambahMenuItem);

        hapusMenuItem.setText("jMenuItem1");
        hapusMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusMenuItemActionPerformed(evt);
            }
        });
        penjualanPopupMenu.add(hapusMenuItem);

        setClosable(true);
        setTitle("Form Penjualan Barang");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        tutupButton.setText("Tutup");
        tutupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutupButtonActionPerformed(evt);
            }
        });

        simpanButton.setText("Simpan");
        simpanButton.setNextFocusableComponent(tutupButton);
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });

        kodePenjualanTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodePenjualanTextFieldKeyPressed(evt);
            }
        });

        penjualanPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Penjualan"));

        penjualanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode Barang", "NamaBarang", "Harga", "Qty", "Satuan", "Jumlah"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Long.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        penjualanTable.setNextFocusableComponent(simpanButton);
        penjualanTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        penjualanTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                penjualanTableMouseReleased(evt);
            }
        });
        penjualanTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                penjualanTablePropertyChange(evt);
            }
        });
        penjualanTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                penjualanTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(penjualanTable);

        javax.swing.GroupLayout penjualanPanelLayout = new javax.swing.GroupLayout(penjualanPanel);
        penjualanPanel.setLayout(penjualanPanelLayout);
        penjualanPanelLayout.setHorizontalGroup(
            penjualanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        penjualanPanelLayout.setVerticalGroup(
            penjualanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        kodePenjualanLabel.setLabelFor(kodePenjualanTextField);
        kodePenjualanLabel.setText("Kode Penjualan");

        semesterLabel.setLabelFor(tanggalTextField);
        semesterLabel.setText("Tanggal");

        totalTextField.setEditable(false);
        totalTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Total : Rp");

        customerLabel.setLabelFor(namaCustomerTextField);
        customerLabel.setText("Customer");

        namaCustomerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaCustomerTextFieldActionPerformed(evt);
            }
        });
        namaCustomerTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                namaCustomerTextFieldKeyPressed(evt);
            }
        });

        lihatButton.setText("Lihat");
        lihatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lihatButtonActionPerformed(evt);
            }
        });

        tanggalTextField.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(kodePenjualanLabel)
                            .addComponent(semesterLabel)
                            .addComponent(customerLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tanggalTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(namaCustomerTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lihatButton))
                            .addComponent(kodePenjualanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(236, 236, 236)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(simpanButton, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(tutupButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(penjualanPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(simpanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tutupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kodePenjualanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kodePenjualanLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(semesterLabel)
                            .addComponent(tanggalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(namaCustomerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerLabel)
                            .addComponent(lihatButton))
                        .addGap(33, 33, 33)))
                .addComponent(penjualanPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalTextField)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setNamaCustomer(String namaCustomer) {
        namaCustomerTextField.setText(namaCustomer);
    }

    public void setMnemonic() {
        customerLabel.setDisplayedMnemonic('C');
        lihatButton.setMnemonic('I');
        simpanButton.setMnemonic('S');
        tutupButton.setMnemonic('U');

    }

    public void setTanggal(String tanggal) {
        tanggalTextField.setText(tanggal);
    }

    public void setKodePenjualan(String kodePenjualan) {
        kodePenjualanTextField.setText(kodePenjualan);
    }

    public void setNamaBarangTabel(String namaBarangTabel) {
        penjualanTable.setValueAt(namaBarangTabel, penjualanTable.getSelectedRow(), 1);
    }

    public void setHargaBarangTabel(long hargaBarangTabel) {
        penjualanTable.setValueAt(hargaBarangTabel, penjualanTable.getSelectedRow(), 2);
    }

    public void setSatuanBarangTabel(String satuanBarangTabel) {
        penjualanTable.setValueAt(satuanBarangTabel, penjualanTable.getSelectedRow(), 4);
    }

    public void setJumlahTabel(long jumlah) {
        penjualanTable.setValueAt(jumlah, penjualanTable.getSelectedRow(), 5);
    }

    public void setTambahBarang(Object[] banyaknya) {
        int noRecord;

        if ((noRecord = penjualanDefaultTableModel.getRowCount() - 1) >= 0) {
            while ((((penjualanTable.getValueAt(noRecord, 0) == null) || penjualanTable.getValueAt(noRecord, 0).equals("")) && (noRecord > 0))) {
                noRecord--;
            }

            if (!((penjualanTable.getValueAt(noRecord, 0) == null) || penjualanTable.getValueAt(noRecord, 0).equals(""))) {
                noRecord++;
            }

            if (noRecord < penjualanDefaultTableModel.getRowCount()) {
                if ((penjualanTable.getValueAt(noRecord, 0) == null) || penjualanTable.getValueAt(noRecord, 0).equals("")) {
                    penjualanDefaultTableModel.removeRow(noRecord--);
                }
            } else {
                noRecord--;
            }
        }

        penjualanDefaultTableModel.insertRow(++noRecord, banyaknya);
    }

    public void clearBanyaknyaTable() {
        penjualanDefaultTableModel.setRowCount(0);
    }

    private void klikKananTabel(java.awt.event.MouseEvent evt) {
        if (evt.isPopupTrigger()) {
            penjualanPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }

    private void tutupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutupButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_tutupButtonActionPerformed

    private void penjualanTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_penjualanTableMouseReleased
        // TODO add your handling code here:
        Point p = evt.getPoint();
        int rowNumber = penjualanTable.rowAtPoint(p);
        ListSelectionModel model = penjualanTable.getSelectionModel();
        model.setSelectionInterval(rowNumber, rowNumber);

        klikKananTabel(evt);

    }//GEN-LAST:event_penjualanTableMouseReleased

    private void penjualanTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_penjualanTableKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (penjualanTable.getSelectedRow() == (penjualanTable.getRowCount() - 1)) {
                if (penjualanTable.getSelectedColumn() == 3) {
                    penjualanDefaultTableModel.insertRow(penjualanDefaultTableModel.getRowCount(), new Object[]{});
                } else {
                    if (penjualanTable.getSelectedColumn() == (penjualanTable.getColumnCount() - 1)) {
                        penjualanDefaultTableModel.insertRow(penjualanDefaultTableModel.getRowCount(), new Object[]{});
                        penjualanTable.changeSelection(penjualanTable.getSelectedRow(), 0, false, false);
                    } else {
                        penjualanTable.changeSelection(penjualanTable.getSelectedRow() - 1, penjualanTable.getSelectedColumn() + 1, false, false);
                    }
                }
            } else {
                if (penjualanTable.getSelectedColumn() == (penjualanTable.getColumnCount() - 1)) {
                    penjualanTable.changeSelection(penjualanTable.getSelectedRow(), 0, false, false);
                } else {
                    penjualanTable.setColumnSelectionInterval(penjualanTable.getSelectedColumn() + 1, penjualanTable.getSelectedColumn() + 1);
                    penjualanTable.setRowSelectionInterval(penjualanTable.getSelectedRow() - 1, penjualanTable.getSelectedRow() - 1);
                }
            }
        }

    }//GEN-LAST:event_penjualanTableKeyPressed

    private void penjualanTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_penjualanTablePropertyChange
        // TODO add your handling code here:
        long hitung=0;
        if (penjualanTable.getSelectedRowCount() > 0) {
            if (penjualanTable.getSelectedColumn() == 0) {
                String kodeBarang = "";
                try {
                    kodeBarang = penjualanTable.getValueAt(penjualanTable.getSelectedRow(), 0).toString();
                } catch (Exception ex) {
                }

                if (!kodeBarang.equals("")) {
                    penjualanController.cariKodeBarang(kodeBarang);
                }
            } else if(penjualanTable.getSelectedColumn()==3){
                try{
                qty= Integer.parseInt(penjualanTable.getValueAt(penjualanTable.getSelectedRow(), 3).toString());
                harga= Long.parseLong(penjualanTable.getValueAt(penjualanTable.getSelectedRow(), 2).toString());
                }catch(Exception e){}
                jumlah=qty*harga;
                penjualanTable.setValueAt(jumlah, penjualanTable.getSelectedRow(), 5);
            }
             for(int i=0;i<penjualanTable.getRowCount();i++){
                 try{
                 hitung+=Long.parseLong(penjualanTable.getValueAt(i, 5).toString());
                 }catch (Exception ex){}
                 penjualan.setTotal(hitung);
                 totalTextField.setText(Long.toString(penjualan.getTotal()));
             }
        }
       

    }//GEN-LAST:event_penjualanTablePropertyChange

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        // TODO add your handling code here:
        penjualanController.simpan(kodePenjualanTextField, namaCustomerTextField, penjualanTable);
        totalTextField.setText("");
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void tambahMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahMenuItemActionPerformed
        // TODO add your handling code here:
        penjualanController.tampilkanFormLihatBarang();
    }//GEN-LAST:event_tambahMenuItemActionPerformed

    private void hapusMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusMenuItemActionPerformed
        // TODO add your handling code here:
        if (penjualanTable.getSelectedRowCount() > 0) {
            penjualanDefaultTableModel.removeRow(penjualanTable.getSelectedRow());
        }
    }//GEN-LAST:event_hapusMenuItemActionPerformed

    private void namaCustomerTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namaCustomerTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            penjualanController.cariNamaCustomer(namaCustomerTextField.getText());
        }

    }//GEN-LAST:event_namaCustomerTextFieldKeyPressed

    private void namaCustomerTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaCustomerTextFieldActionPerformed
        // TODO add your handling code here:

        penjualanController.cariNamaCustomer(namaCustomerTextField.getText());


    }//GEN-LAST:event_namaCustomerTextFieldActionPerformed

    private void kodePenjualanTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodePenjualanTextFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            penjualanController.cariKodePenjualan(kodePenjualanTextField);
        }
    }//GEN-LAST:event_kodePenjualanTextFieldKeyPressed

    private void lihatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lihatButtonActionPerformed
        // TODO add your handling code here:
        penjualanController.tampilkanFormLihatCustomer();
    }//GEN-LAST:event_lihatButtonActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        tanggalTextField.setText(sdf.format(tgl));
    }//GEN-LAST:event_formInternalFrameActivated

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel customerLabel;
    private javax.swing.JMenuItem hapusMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel kodePenjualanLabel;
    private javax.swing.JTextField kodePenjualanTextField;
    private javax.swing.JButton lihatButton;
    private javax.swing.JTextField namaCustomerTextField;
    private javax.swing.JPanel penjualanPanel;
    private javax.swing.JPopupMenu penjualanPopupMenu;
    private javax.swing.JTable penjualanTable;
    private javax.swing.JLabel semesterLabel;
    private javax.swing.JButton simpanButton;
    private javax.swing.JMenuItem tambahMenuItem;
    private javax.swing.JTextField tanggalTextField;
    private javax.swing.JTextField totalTextField;
    private javax.swing.JButton tutupButton;
    // End of variables declaration//GEN-END:variables
}
